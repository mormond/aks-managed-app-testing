# This workflow will build and push an application to a Azure Kubernetes Service (AKS) cluster when you push your code
#
# This workflow assumes you have already created the target AKS cluster and have created an Azure Container Registry (ACR)
# For instructions see:
#   - https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal
#   - https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-portal
#   - https://github.com/Azure/aks-create-action
#
# To configure this workflow:
#
# 1. Set the following secrets in your repository (instructions for getting these 
#    https://github.com/Azure/login#configure-a-service-principal-with-a-federated-credential-to-use-oidc-based-authentication):
#    - AZURE_CLIENT_ID
#    - AZURE_TENANT_ID
#    - AZURE_SUBSCRIPTION_ID
#
# 2. Set the following environment variables (or replace the values below):
#    - AZURE_CONTAINER_REGISTRY (name of your container registry / ACR)
#    - RESOURCE_GROUP (where your cluster is deployed)
#    - CLUSTER_NAME (name of your AKS cluster)
#    - CONTAINER_NAME (name of the container image you would like to push up to your ACR)
#    - SECRET_NAME (name of the secret associated with pulling your ACR image)
#    - DEPLOYMENT_MANIFEST_PATH (path to the manifest yaml for your deployment)
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
# For more options with the actions used below please refer to https://github.com/Azure/login

name: Build and deploy an app to AKS

on:
  workflow_dispatch:

env:
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP_NAME }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  CLUSTER_NAME: "aks101cluster-vmss"
  DEPLOYMENT_MANIFEST_PATH: "App/deployment.yml"
  KV_SECRET_PROVIDER_IDENTITY: ${{ secrets.KV_SECRET_PROVIDER_IDENTITY }}
  KV_NAME: ${{ secrets.KV_NAME }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}


jobs:
  build:
    permissions:
      actions: read
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
    # Checks out the repository this file is in
    - uses: actions/checkout@master
    
    # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v1.4.3
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
      
    # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
    - name: Get K8s context
      uses: azure/aks-set-context@v2.0
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}

    - name: Inject values
      run: |
        sed \
        -e "s/userAssignedIdentityID:\s\"\"/userAssignedIdentityID: \"${KV_SECRET_PROVIDER_IDENTITY}\"/" \
        -e "s/keyvaultName:\s\"\"/keyvaultName: \"${KV_NAME}\"/" \
        -e "s/tenantId:\s\"\"/tenantId: \"${AZURE_TENANT_ID}\"/" \
        ${DEPLOYMENT_MANIFEST_PATH} > injected-manifest.yaml

    - name: Debug
      run: |
        cat injected-manifest.yaml   

    - name: Apply manifest
      run: |
        kubectl apply -f injected-manifest.yaml

    # Deploys application based on given manifest file
    # - name: Deploys application
    #   uses: Azure/k8s-deploy@v3.0
    #   with:
    #     action: deploy
    #     manifests: injected-manifest.yaml
